version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://expense_user:expense_password@db:5432/expense_tracker
      - SECRET_KEY=your-production-secret-key
      - JWT_SECRET_KEY=your-production-jwt-secret
    depends_on:
      - db
    volumes:
      - ./backend/app/static/uploads:/app/app/static/uploads
      - ./backend/ml_models:/app/ml_models
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=expense_tracker
      - POSTGRES_USER=expense_user
      - POSTGRES_PASSWORD=expense_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
